{"version":3,"sources":["Helper/Contexts.js","components/MainMenu.js","Helper/QuestionBank.js","components/Quiz.js","components/EndScreens.js","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","MainMenu","useContext","setGameState","gameState","className","onClick","Questions","prompt","optionA","optionB","optionC","optionD","answer","Quiz","score","setScore","useState","currQuestion","setCurrQuestion","optionChosen","setOptionChosen","chooseOption","option","length","alert","EndScreens","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAEaA,G,KAAcC,2B,OCoBZC,EAlBE,WAAO,IAAD,EACiBC,qBAAWH,GAA5BI,GADA,EACXC,UADW,EACAD,cAEnB,OACI,qBAAKE,UAAU,OAAf,SAEI,wBACIC,QAAS,WACNH,EAAa,SAFpB,2BCVCI,EAAY,CACrB,CACIC,OAAO,eACPC,QAAS,KACTC,QAAS,IACTC,QAAS,IACTC,QAAS,IACTC,OAAQ,WAEZ,CACIL,OAAQ,mBACRC,QAAS,MACTC,QAAS,OACTC,QAAS,OACTC,QAAS,OACTC,OAAQ,WAEZ,CACIL,OAAQ,+CACRC,QAAS,SACTC,QAAS,aACTC,QAAS,QACTC,QAAS,OACTC,OAAQ,WAEZ,CACIL,OAAQ,+CACRC,QAAS,QACTC,QAAS,UACTC,QAAS,MACTC,QAAS,OACTC,OAAQ,YCgCDC,EA3DF,WAAO,IAAD,EACsCZ,qBAAWH,GAAxDgB,EADO,EACPA,MAAOC,EADA,EACAA,SAAqBb,GADrB,EACUC,UADV,EACqBD,cADrB,EAEyBc,mBAAS,GAFlC,mBAERC,EAFQ,KAEMC,EAFN,OAGyBF,mBAAS,KAHlC,mBAGRG,EAHQ,KAGMC,EAHN,KAKTC,EAAe,SAACC,GAClBF,EAAgBE,IAqBpB,OACI,qBAAKlB,UAAU,OAAf,SACI,sBAAKA,UAAU,UAAf,UACD,6BAAKE,EAAUW,GAAcV,SAEzB,yBAAQF,QAAS,kBAAMgB,EAAa,YAApC,UACKf,EAAUW,GAAcT,QAAS,OAEtC,yBAAQH,QAAS,kBAAMgB,EAAa,YAApC,UACKf,EAAUW,GAAcR,QAAS,OAEtC,yBAAQJ,QAAS,kBAAMgB,EAAa,YAApC,UACKf,EAAUW,GAAcP,QAAS,OAEtC,yBAAQL,QAAS,kBAAMgB,EAAa,YAApC,UACKf,EAAUW,GAAcN,QAAS,OAIzCM,GAAgBX,EAAUiB,OAAQ,EAC/B,wBAAQlB,QA7BA,WACXC,EAAUW,GAAcL,QAAUO,GAClCJ,EAASD,EAAO,GAEpBZ,EAAa,eAyBN,yBAEC,wBAAQG,QAvCC,WACbC,EAAUW,GAAcL,QAAUO,GAClCJ,EAASD,EAAQ,GAErBU,MAAMV,GACNI,EAAgBD,EAAe,IAkCvB,iCChCDQ,EAhBI,WAAO,IAAD,EACqBxB,qBAAWH,GAA7CgB,EADa,EACbA,MAAOC,EADM,EACNA,SAAUb,EADJ,EACIA,aAKzB,OACI,sBAAKE,UAAU,aAAf,UACK,GACD,+CACA,mCAAMU,EAAN,MAAgBR,EAAUiB,OAA1B,OACA,wBAAQlB,QATI,WAChBU,EAAS,GACTb,EAAa,SAOT,8BCUGwB,MAnBf,WAAgB,IAAD,EACqBV,mBAAS,QAD9B,mBACNb,EADM,KACKD,EADL,OAEac,mBAAS,GAFtB,mBAENF,EAFM,KAECC,EAFD,KAMb,OACE,sBAAKX,UAAU,MAAf,UACE,0CACA,eAACN,EAAY6B,SAAb,CAAsBC,MAAO,CAACzB,YAAWD,eAAcY,QAAOC,YAA9D,UACe,SAAdZ,GAAwB,cAAC,EAAD,IACV,SAAdA,GAAwB,cAAC,EAAD,IACV,eAAdA,GAA8B,cAAC,EAAD,WCPtB0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0603a8b4.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nexport const QuizContext = createContext();","import React, {useContext} from 'react'\nimport { QuizContext } from '../Helper/Contexts'\nimport \"../App.css\"\n\nconst MainMenu = () => {\n    const { gameState, setGameState } = useContext(QuizContext);\n\n    return (\n        <div className=\"Menu\">\n\n            <button \n                onClick={() => {\n                   setGameState(\"Quiz\");\n                }}\n            >\n                    Start Quiz\n                    </button>\n                    \n        </div>\n    )\n}\n\nexport default MainMenu\n","export const Questions = [\n    {\n        prompt:\"What is 1+3?\",\n        optionA: \"24\",\n        optionB: \"4\",\n        optionC: \"3\",\n        optionD: \"2\",\n        answer: \"optionB\",\n    },\n    {\n        prompt: \"What is my name?\",\n        optionA: \"Ken\",\n        optionB: \"Riku\",\n        optionC: \"Nana\",\n        optionD: \"Yuri\",\n        answer: \"optionD\",\n    },\n    {\n        prompt: \"Which of this is not a programming language?\",\n        optionA: \"Python\",\n        optionB: \"JavaScript\",\n        optionC: \"MC-03\",\n        optionD: \"Java\",\n        answer: \"optionC\",\n    },\n    {\n        prompt: \"Which of this is not a javascript framework?\",\n        optionA: \"React\",\n        optionB: \"Angular\",\n        optionC: \"Vue\",\n        optionD: \"Java\",\n        answer: \"optionD\",\n    },\n    \n    \n]","import React,{useState, useContext} from 'react'\nimport {Questions} from '../Helper/QuestionBank'\nimport { QuizContext } from '../Helper/Contexts'\n\nconst Quiz = () => {\n    const { score, setScore, gameState, setGameState } = useContext(QuizContext);\n    const [currQuestion, setCurrQuestion] = useState(0);\n    const [optionChosen, setOptionChosen] = useState(\" \");\n\n    const chooseOption = (option) => {\n        setOptionChosen(option);\n      };\n    \n\n    const nextQuestion = () => {\n        if (Questions[currQuestion].answer == optionChosen) {\n            setScore(score + 1);\n        }\n        alert(score);\n        setCurrQuestion(currQuestion + 1)\n\n    }\n    const finishQuiz = () =>{\n        if (Questions[currQuestion].answer == optionChosen) {\n            setScore(score +1);\n        }\n        setGameState(\"EndScreens\");\n\n    }\n\n\n    return (\n        <div className=\"Quiz\">\n            <div className=\"options\">\n           <h1>{Questions[currQuestion].prompt}</h1>\n           \n               <button onClick={() => chooseOption(\"optionA\")}>\n                   {Questions[currQuestion].optionA}{\" \"}\n                   </button>\n               <button onClick={() => chooseOption(\"optionB\")}>\n                   {Questions[currQuestion].optionB}{\" \"}\n                   </button>\n               <button onClick={() => chooseOption(\"optionC\")}>\n                   {Questions[currQuestion].optionC}{\" \"}\n                   </button>\n               <button onClick={() => chooseOption(\"optionD\")}>\n                   {Questions[currQuestion].optionD}{\" \"}\n                   </button>\n           \n\n           {currQuestion == Questions.length -1 ? (\n               <button onClick ={finishQuiz}>Finish Quiz</button>\n           ):( \n                <button onClick={nextQuestion}>NEXT QUESTION</button>\n           )}\n           </div>\n\n\n\n        </div>\n    )\n}\n\nexport default Quiz\n","import React, {useContext} from 'react'\nimport { QuizContext } from '../Helper/Contexts'\nimport \"../App.css\"\nimport { Questions } from '../Helper/QuestionBank'\n\nconst EndScreens = () => {\n    const { score, setScore, setGameState } = useContext(QuizContext);\n    const restartQuiz = ()=> {\n        setScore(0);\n        setGameState(\"menu\");\n    }\n    return (\n        <div className=\"EndScreens\">\n            {\"\"}\n            <h1>Quiz Finished</h1>\n            <h3> {score} / {Questions.length} </h3>\n            <button onClick={restartQuiz}>Restart Quiz</button>\n        </div>\n    )\n}\n\nexport default EndScreens\n","import './App.css';\nimport React, {useState} from 'react'\nimport MainMenu from './components/MainMenu';\nimport Quiz from './components/Quiz';\nimport EndScreens from './components/EndScreens';\nimport { QuizContext } from './Helper/Contexts'\n\nfunction App() {\n  const [gameState, setGameState] = useState('menu');\n  const [score, setScore] = useState(0)\n   //とりあえずここに作っといて、下のプロバイダで上の２つを全コンポーネントがアクセス可能な状態をつくる\n\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>   \n      <QuizContext.Provider value={{gameState, setGameState, score, setScore}}>\n      {gameState === 'menu' && <MainMenu />}\n      {gameState === 'Quiz' && <Quiz />}\n      {gameState === 'EndScreens' && <EndScreens />}\n      </QuizContext.Provider>  \n    </div>\n    //providerの中にいる３つのコンポーネントはvalueにアクセス可能\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}